{"ast":null,"code":"import{createSelector}from\"reselect\";var selectCart=function selectCart(state){return state.cart;};export var selectCartItems=createSelector([selectCart],function(cart){return cart.cartItems;});export var selectCartHidden=createSelector([selectCart],function(cart){return cart.hidden;});export var selectCartItemsCount=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity;},0);});export var selectCartTotal=createSelector([selectCartItems],function(cartItems){return cartItems.reduce(function(accumulatedQuantity,cartItem){return accumulatedQuantity+cartItem.quantity*cartItem.price;},0);});","map":{"version":3,"sources":["/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumulatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,OAASA,cAAT,KAA+B,UAA/B,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAV,EAAxB,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,CAE3C,SAACE,IAAD,QAAUA,CAAAA,IAAI,CAACE,SAAf,EAF2C,CAAtC,CAKP,MAAO,IAAMC,CAAAA,gBAAgB,CAAGN,cAAc,CAAC,CAACC,UAAD,CAAD,CAC5C,SAAAE,IAAI,QAAIA,CAAAA,IAAI,CAACI,MAAT,EADwC,CAAvC,CAIP,MAAO,IAAMC,CAAAA,oBAAoB,CAAGR,cAAc,CAChD,CAACI,eAAD,CADgD,CAC7B,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACI,MAAV,CAC9B,SAACC,mBAAD,CAAsBC,QAAtB,QAAmCD,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QAAlE,EAD8B,CAE9B,CAF8B,CAAJ,EADoB,CAA3C,CAOP,MAAO,IAAMC,CAAAA,eAAe,CAAGb,cAAc,CAC3C,CAACI,eAAD,CAD2C,CAE3C,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACI,MAAV,CACX,SAACC,mBAAD,CAAsBC,QAAtB,QAAmCD,CAAAA,mBAAmB,CAAGC,QAAQ,CAACC,QAAT,CAAoBD,QAAQ,CAACG,KAAtF,EADW,CAEX,CAFW,CAAJ,EAFkC,CAAtC","sourcesContent":["import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector(\n  [selectCart],\n  (cart) => cart.cartItems\n);\n\nexport const selectCartHidden = createSelector([selectCart],\n  cart => cart.hidden\n);\n\nexport const selectCartItemsCount = createSelector(\n  [selectCartItems], cartItems => cartItems.reduce(\n    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity,\n    0\n  )\n);\n\nexport const selectCartTotal = createSelector(\n  [selectCartItems],\n  cartItems => cartItems.reduce(\n    (accumulatedQuantity, cartItem) => accumulatedQuantity + cartItem.quantity * cartItem.price,\n    0\n  )\n);\n"]},"metadata":{},"sourceType":"module"}