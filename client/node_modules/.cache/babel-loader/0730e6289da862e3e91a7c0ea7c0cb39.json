{"ast":null,"code":"import _defineProperty from \"/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\nimport { googleSignInStart, emailSignInStart } from \"../../redux/user/user.actions\";\nimport { connect } from \"react-redux\";\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setCredentials = _useState2[1];\n\n  const email = userCredentials.email,\n        password = userCredentials.password;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"email\",\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    handleChange: handleChange,\n    label: \"password\",\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Sign In\"), React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","googleSignInStart","emailSignInStart","connect","SignIn","email","password","userCredentials","setCredentials","handleSubmit","e","preventDefault","handleChange","target","value","name","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport './sign-in.styles.scss';\n\nimport FormInput from \"../form-input/form-input.component\";\nimport CustomButton from \"../custom-button/custom-button.component\";\n\nimport {googleSignInStart, emailSignInStart} from \"../../redux/user/user.actions\";\n\nimport {connect} from \"react-redux\";\n\nconst SignIn = ({emailSignInStart, googleSignInStart}) => {\n  const [userCredentials, setCredentials] = useState({ email:'', password: '' });\n  const {email, password} = userCredentials;\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = e => {\n    const {value, name} = e.target;\n    setCredentials({...userCredentials, [name]: value})\n  };\n\n  return (\n    <div className='sign-in'>\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          handleChange={handleChange}\n          label=\"email\"\n          type=\"email\"\n          name=\"email\"\n          value={email} required/>\n        <FormInput\n          handleChange={handleChange}\n          label=\"password\"\n          type=\"password\"\n          name=\"password\"\n          value={password} required/>\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\">Sign In</CustomButton>\n          <CustomButton type=\"button\" onClick={googleSignInStart} isGoogleSignIn>Sign in with Google</CustomButton>\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({email, password}))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}