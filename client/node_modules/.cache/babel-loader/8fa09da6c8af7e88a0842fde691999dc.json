{"ast":null,"code":"import _regeneratorRuntime from\"/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,call,put,all}from'redux-saga/effects';import ShopActionTypes from\"./shop.types\";import{convertCollectionsSnapshotToMap,firestore}from\"../../firebase/firebase.utils\";import{fetchCollectionsFailure,fetchCollectionsSuccess}from\"./shop.actions\";export function fetchCollectionAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;collectionRef=firestore.collection('collections');_context.next=4;return collectionRef.get();case 4:snapshot=_context.sent;_context.next=7;return call(convertCollectionsSnapshotToMap,snapshot);case 7:collectionsMap=_context.sent;_context.next=10;return put(fetchCollectionsSuccess(collectionsMap));case 10:_context.next=16;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);_context.next=16;return put(fetchCollectionsFailure(_context.t0));case 16:case\"end\":return _context.stop();}}},_marked,null,[[0,12]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionAsync","fetchCollectionsStart","shopSagas","takeLatest","call","put","all","ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsFailure","fetchCollectionsSuccess","collectionRef","collection","get","snapshot","collectionsMap","FETCH_COLLECTIONS_START"],"mappings":"0NAMiBA,oB,iDAWAC,qB,iDAOAC,S,EAxBjB,OAASC,UAAT,CAAqBC,IAArB,CAA2BC,GAA3B,CAAgCC,GAAhC,KAA2C,oBAA3C,CAEA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAAQC,+BAAR,CAAyCC,SAAzC,KAAyD,+BAAzD,CACA,OAAQC,uBAAR,CAAiCC,uBAAjC,KAA+D,gBAA/D,CAEA,MAAO,SAAUX,CAAAA,oBAAV,0LAEGY,aAFH,CAEmBH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAFnB,iBAGc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CAHd,OAGGC,QAHH,+BAIoB,MAAMX,CAAAA,IAAI,CAACI,+BAAD,CAAkCO,QAAlC,CAAV,CAJpB,OAIGC,cAJH,gCAKH,MAAMX,CAAAA,GAAG,CAACM,uBAAuB,CAACK,cAAD,CAAxB,CAAT,CALG,0GAOH,MAAMX,CAAAA,GAAG,CAACK,uBAAuB,aAAxB,CAAT,CAPG,qEAWP,MAAO,SAAUT,CAAAA,qBAAV,qJACL,MAAME,CAAAA,UAAU,CACdI,eAAe,CAACU,uBADF,CAEdjB,oBAFc,CAAhB,CADK,wDAOP,MAAO,SAAUE,CAAAA,SAAV,yIACL,MAAMI,CAAAA,GAAG,CAAC,CAACF,IAAI,CAACH,qBAAD,CAAL,CAAD,CAAT,CADK","sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\n\nimport ShopActionTypes from \"./shop.types\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\nimport {fetchCollectionsFailure, fetchCollectionsSuccess} from \"./shop.actions\";\n\nexport function* fetchCollectionAsync() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([call(fetchCollectionsStart)])\n}\n"]},"metadata":{},"sourceType":"module"}