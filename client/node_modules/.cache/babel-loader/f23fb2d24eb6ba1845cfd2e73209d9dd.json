{"ast":null,"code":"import ShopActionTypes from\"./shop.types\";import{convertCollectionsSnapshotToMap,firestore}from\"../../firebase/firebase.utils\";export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:ShopActionTypes.FETCH_COLLECTIONS_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collectionsMap){return{type:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,payload:collectionsMap};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,payload:errorMessage};};//Redux Thunk action for example\nexport var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){return function(dispatch){var collectionRef=firestore.collection('collections');dispatch(fetchCollectionsStart());collectionRef.get().then(function(snapshot){var collectionsMap=convertCollectionsSnapshotToMap(snapshot);dispatch(fetchCollectionsSuccess(collectionsMap));}).catch(function(err){dispatch(fetchCollectionsFailure(err));});};};","map":{"version":3,"sources":["/home/vadym-lazariev/WebstormProjects/crwn-clothing/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","convertCollectionsSnapshotToMap","firestore","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","err"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAAQC,+BAAR,CAAyCC,SAAzC,KAAyD,+BAAzD,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CAC1CC,IAAI,CAAEJ,eAAe,CAACK,uBADoB,CAAP,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,cAAc,QAAK,CACxDH,IAAI,CAAEJ,eAAe,CAACQ,yBADkC,CAExDC,OAAO,CAAEF,cAF+C,CAAL,EAA9C,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,YAAY,QAAK,CACtDP,IAAI,CAAEJ,eAAe,CAACY,yBADgC,CAEtDH,OAAO,CAAEE,YAF6C,CAAL,EAA5C,CAMP;AACA,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,EAAM,CAC9C,MAAO,UAAAC,QAAQ,CAAI,CACjB,GAAMC,CAAAA,aAAa,CAAGb,SAAS,CAACc,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CACAY,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,SAAAC,QAAQ,CAAI,CACnC,GAAMZ,CAAAA,cAAc,CAAGN,+BAA+B,CAACkB,QAAD,CAAtD,CACAL,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR,CACD,CAHD,EAGGa,KAHH,CAGU,SAAAC,GAAG,CAAI,CACfP,QAAQ,CAACJ,uBAAuB,CAACW,GAAD,CAAxB,CAAR,CACD,CALD,EAMD,CATD,CAUD,CAXM","sourcesContent":["import ShopActionTypes from \"./shop.types\";\nimport {convertCollectionsSnapshotToMap, firestore} from \"../../firebase/firebase.utils\";\n\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\n\n\n//Redux Thunk action for example\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch( err => {\n      dispatch(fetchCollectionsFailure(err));\n    });\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}